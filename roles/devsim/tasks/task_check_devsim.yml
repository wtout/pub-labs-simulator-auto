---
# tasks to check simulation status
- block:
  - include_tasks: task_get_active_avmid.yml
  - block:
    - name: define active_device_list
      ansible.builtin.set_fact:
        active_device_list: []
        active_dev_info: []
        active_ip_list: []
        active_snmp_list: []
        active_ssh_list: []
        active_netconf_list: []
        active_username_list: []
        active_password_list: []
        active_community_list: []
      when: active_avmid_list == []
    - include_tasks:
        file: task_get_active_device_info.yml
        apply:
          vars:
            avm_file: "/opt/{{ automation_reponame }}/simulator/registry/avm{{ id_item }}.xml"
      loop: "{{ active_avmid_list }}"
      loop_control:
        loop_var: id_item
    - name: define active_dev_info
      ansible.builtin.set_fact:
        active_dev_info: "{{ active_dev_info|default(['Product,Address,SNMP,SSH,NetConf,AVM,Username,Password,SNMP Community']) + [([active_item.0] + active_item.1|flatten)|join(',')] }}"
      loop: "{{ mylists }}"
      loop_control:
        loop_var: active_item
        label: "{{ active_item|flatten }}"
      vars:
        mylists: "{{ active_device_list|zip(active_ip_list|zip(active_snmp_list|zip(active_ssh_list|zip(active_netconf_list|zip(active_avmid_list|zip(active_username_list|zip(active_password_list|zip(active_community_list)))))))) }}"
    - name: write active device info to file
      ansible.builtin.copy:
        content: "{{ active_dev_info|join('\n')|replace('True','yes')|replace('False','no') }}"
        dest: "{{ auto_dir }}/active_simulated_devices.csv"
      delegate_to: localhost
    - name: define active_id_ip
      ansible.builtin.set_fact:
        active_id_ip: "{{ active_id_ip|default([]) + [([active_item.0] + active_item.1)|join(' || ')] }}"
      loop: "{{ active_avmid_list|zip(active_device_list|zip(active_ip_list)) }}"
      loop_control:
        loop_var: active_item
        label: "{{ active_item|flatten }}"
    - debug:
        msg: "{{ ['Active AVM ID || Active Device ID || Active Device IP'] + active_id_ip|default([]) }}"
    when: check_devsim | default(false) | bool
  tags: [ 'never', 'devsim' ]
