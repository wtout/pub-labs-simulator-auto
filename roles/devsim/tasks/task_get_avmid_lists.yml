---
# tasks to get the avmid lists
- block:
  - name: find active AVM files/IDs
    ansible.builtin.shell:
      sh whoisavm.sh
    register: reg_active
    check_mode: no
    no_log: yes
    args:
      chdir: /opt/{{ automation_reponame }}/simulator
  - name: define active_avmid_list
    ansible.builtin.set_fact:
      active_avmid_list: "{{ reg_active.stdout_lines }}"
  - name: find all AVM files
    ansible.builtin.find:
      paths: "/opt/{{ automation_reponame }}/simulator/registry"
      patterns: 'avm*.xml'
    register: reg_avm_files
    no_log: true
  - name: define avm_list
    ansible.builtin.set_fact:
      avm_list: "{{ avm_list|default([]) | union([file_item.path|regex_replace('^.*avm(.*).xml$','\\1')]) }}"
    loop: "{{ reg_avm_files.files }}"
    loop_control:
      loop_var: file_item
      label: "{{ file_item.path }}"
  - name: define avmid lists
    ansible.builtin.set_fact:
      good_avmid_list: "{{ avm_list }}"
      bad_avmid_list: []
    when: AVMLIST|default('') == ''
  - name: define avmid lists
    ansible.builtin.set_fact:
      good_avmid_list: "{{ good_avmid_list|default([]) | union([id_item] if id_item in avm_list else []) }}"
      bad_avmid_list: "{{ bad_avmid_list|default([]) | union([id_item] if id_item not in avm_list else []) }}"
    loop: "{{ AVMLIST|split(',')|list }}"
    loop_control:
      loop_var: id_item
    when: AVMLIST|default('') != ''
  tags: [ 'never', 'devsim' ]
