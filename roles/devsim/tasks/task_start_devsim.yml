---
# tasks to start device simulation
- name: Start device
  when: start_devsim | default(false) | bool
  block:
    - name: Get AVM ID lists
      ansible.builtin.include_tasks: task_get_avmid_lists.yml
    - name: Start device
      ansible.builtin.include_tasks:
        file: task_start_device.yml
        apply:
          vars:
            avmid: "{{ id_item }}"
            avm_action: 'start'
      loop: "{{ good_avmid_list }}"
      loop_control:
        loop_var: id_item
    - name: Information message
      ansible.builtin.debug:
        msg:
          - 'The following AVM IDs do not correspond to AVM files'
          - "{{ bad_avmid_list | join(',') }}"
      when:
        - bad_avmid_list != []
- name: Deploy device
  when: deploy_devsim | default(false) | bool
  block:
    - name: Verify device info
      ansible.builtin.include_tasks:
        file: task_verify_device_info.yml
        apply:
          vars:
            device: "{{ device_item }}"
      when:
        - (device_item.api and (device_item.snmpv2 or device_item.snmpv3)) or (device_item.ssh and (device_item.snmpv2 or device_item.snmpv3)) or \
          (device_item.api and device_item.ssh) or (device_item.api and device_item.ssh and (device_item.snmpv2 or device_item.snmpv3))
      loop: "{{ device_list | default([]) }}"
      loop_control:
        loop_var: device_item
    - name: Assert devinfo_status is empty
      ansible.builtin.assert:
        that: devinfo_status | default([]) == []
        fail_msg: "{{ devinfo_status | default([]) }}"
    - name: Simulate device
      ansible.builtin.include_tasks:
        file: task_simulate_device.yml
        apply:
          vars:
            device: "{{ device_item }}"
            avm_action: 'start'
      loop: "{{ device_list | default([]) }}"
      loop_control:
        loop_var: device_item
- name: Display list of flawed SNMP recordings
  ansible.builtin.debug:
    msg:
      - "{{ snmp_flawed_recording_list | default([]) | length | string + ' flawed files have been identified:' }}"
      - "{{ snmp_flawed_recording_list | default([]) }}"
  when: snmp_flawed_recording_list | default([]) != []
