---
# tasks to verify SNMP response
- block:
  - block:
    - name: verify SNMP v2 response from device at {{ ip }}
      community.general.snmp_facts:
        host: "{{ ip }}"
        version: v2c
        community: "{{ comstr }}"
      register: reg_snmpv2_response
      no_log: yes
    - debug:
        msg:
          - "{{ devid }}: {{ reg_snmpv2_response.ansible_facts.ansible_sysdescr }}"
    rescue:
    - debug:
        msg:
          - "{{ devid }}: {{ reg_snmpv2_response }}"
    - name: define snmp_flawed_recording_list
      ansible.builtin.set_fact:
        snmp_flawed_recording_list: "{{ snmp_flawed_recording_list|default([]) + [devid + ': ' + reg_snmpv2_response|string] }}"
    when: snmpv2|default(false)
  - block:
    - name: get the Linux distribution
      ansible.builtin.setup:
        filter:
          - 'ansible_distribution'
    - block:
      - name: verify SNMP v3 response from device at {{ ip }}
        community.general.snmp_facts:
          host: "{{ ip }}"
          version: v3
          level: authPriv
          integrity: "{{ authpr|lower }}"
          privacy: "{{ privpr|lower|regex_replace('[0-9]*','') }}"
          username: "{{ authusr }}"
          authkey: "{{ authpas }}"
          privkey: "{{ privpas }}"
        register: reg_snmpv3_response
        no_log: yes
      - debug:
          msg:
            - "{{ devid }}: {{ reg_snmpv3_response.ansible_facts.ansible_sysdescr }}"
      rescue:
      - debug:
          msg:
            - "{{ devid }}: {{ reg_snmpv3_response }}"
      - name: define snmp_flawed_recording_list
        ansible.builtin.set_fact:
          snmp_flawed_recording_list: "{{ snmp_flawed_recording_list|default([]) + [devid + ': ' + reg_snmpv3_response|string] }}"
      when:
        - (ansible_facts.distribution == 'AlmaLinux' and privpr|lower|regex_replace('[0-9]*','') == 'aes') or (ansible_facts.distribution == 'CentOS' and privpr|lower|regex_replace('[0-9]*','') == 'des')
    - ansible.builtin.debug:
        msg: "{{ devid + ': ' + 'Unable to send a SNMPv3 walk request with the current OS and Encryption/Privacy combination: ' + ansible_facts.distribution + ' + ' + privpr|lower|regex_replace('[0-9]*','')|upper }}"
      when:
        - (ansible_facts.distribution == 'AlmaLinux' and privpr|lower|regex_replace('[0-9]*','') != 'aes') or (ansible_facts.distribution == 'CentOS' and privpr|lower|regex_replace('[0-9]*','') != 'des')
    when:
      - snmpv3|default(false)
  delegate_to: localhost
  tags: [ 'never', 'devsim' ]
