---
# Task file to create forward DNS record
- block:
  - name: Add {{ mydesignation }} DNS record
    ansible.builtin.shell: |
      {% if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search ('-HX-DC') %}
      sshpass -p {{ svc_password }} ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T -l {{ svc_username }} {{ lookup('env','MYIP') }} <<EOF
      {% endif %}
      nsupdate {% if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search ('-HX-DC') %}-g {% endif %}<<EOC
      server {{ myserver }}
      update add {{ myrecord }}.{{ mydomain }} 86400 A {{ myipaddress }}
      send
      EOC
      {% if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search ('-HX-DC') %}
      EOF
      {% endif %}
    register: reg_fdr
    failed_when: reg_fdr.rc != 0 and reg_fdr.stderr is not search('tsig verify failure')
    until: reg_fdr is succeeded
    delay: 10
    no_log: yes
  rescue:
  - ansible.builtin.debug:
      msg: "{{ reg_fdr|replace(svc_password,'obfuscated') if svc_password != '' else reg_fdr }}"
  always:
  - ansible.builtin.assert:
      that: reg_fdr is succeeded
  delegate_to: localhost
