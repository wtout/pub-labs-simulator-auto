---
# Task file to create reverse DNS record
- block:
  - name: Add {{ mydesignation }} reverse DNS record
    ansible.builtin.shell: |
      {% if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search ('-HX-DC') %}
      sshpass -p {{ svc_password }} ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T -l {{ svc_username }} {{ lookup('env','MYIP') }} <<EOF
      {% endif %}
      nsupdate {% if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search ('-HX-DC') %}-g {% endif %}<<EOC
      server {{ myserver }}
      zone {{ myipaddress.split('.')[:-1] | reverse | join('.') + '.in-addr.arpa' }}
      update add {{ myipaddress.split('.') | reverse | join('.') + '.in-addr.arpa' }} 86400 PTR {{ myrecord }}.{{ mydomain }}
      send
      EOC
      {% if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search ('-HX-DC') %}
      EOF
      {% endif %}
    register: reg_rdr
    failed_when: reg_rdr.rc != 0 and reg_rdr.stderr is not search('tsig verify failure')
    until: reg_rdr is succeeded
    delay: 10
    no_log: yes
  rescue:
  - ansible.builtin.debug:
      msg: "{{ reg_rdr|replace(svc_password,'obfuscated') if svc_password != '' else reg_rdr }}"
  always:
  - ansible.builtin.assert:
      that: reg_rdr is succeeded
    when: hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search ('-HX-DC')
  delegate_to: localhost
