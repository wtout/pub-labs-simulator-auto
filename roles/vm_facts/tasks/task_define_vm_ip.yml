---
# tasks to define vm ips
- block:
  - name: define IP addresses
    ansible.builtin.set_fact:
      ipaddress1: "{{ netconfig.nic1.ippool[index|int - 1] if netconfig.nic1.ippool != [] else (build.secondary.octets if inventory_hostname is search('dr') else build.primary.octets) + '.' + netconfig.nic1.octetpool[index|int - 1]|string if (netconfig.nic1.octetpool != [] and index|int <= netconfig.nic1.octetpool|length) else '' }}"
      ipaddress2: "{{ netconfig.nic2.ippool[index|int - 1] if netconfig.nic2.ippool != [] else (build.secondary.octets if inventory_hostname is search('dr') else build.primary.octets) + '.' + netconfig.nic2.octetpool[index|int - 1]|string if (netconfig.nic2.octetpool != [] and index|int <= netconfig.nic2.octetpool|length) else '' }}"
      ipaddress3: "{{ netconfig.nic3.ippool[index|int - 1] if (netconfig.nic3.ippool is defined and netconfig.nic3.ippool != []) else (build.secondary.octets if inventory_hostname is search('dr') else build.primary.octets) + '.' + netconfig.nic3.octetpool[index|int - 1]|string if ((netconfig.nic3.octetpool is defined and netconfig.nic3.octetpool != []) and index|int <= netconfig.nic3.octetpool|length) else '' }}"
      ipaddress4: "{{ netconfig.nic4.ippool[index|int - 1] if (netconfig.nic4.ippool is defined and netconfig.nic4.ippool != []) else (build.secondary.octets if inventory_hostname is search('dr') else build.primary.octets) + '.' + netconfig.nic4.octetpool[index|int - 1]|string if ((netconfig.nic4.octetpool is defined and netconfig.nic4.octetpool != []) and index|int <= netconfig.nic4.octetpool|length) else '' }}"
      ipaddress5: "{{ netconfig.nic5.ippool[index|int - 1] if (netconfig.nic5.ippool is defined and netconfig.nic5.ippool != []) else (build.secondary.octets if inventory_hostname is search('dr') else build.primary.octets) + '.' + netconfig.nic5.octetpool[index|int - 1]|string if ((netconfig.nic5.octetpool is defined and netconfig.nic5.octetpool != []) and index|int <= netconfig.nic5.octetpool|length) else '' }}"
    vars:
      index: "{{ inventory_hostname[-2:] }}"

  - name: define ansible_host
    ansible.builtin.set_fact:
      ansible_host: "{{ ipaddress1 if ipaddress1 != '' else ipaddress2 }}"

  - name: update netconfig with IP addresses
    ansible.builtin.set_fact:
      netconfig: "{{ netconfig|default({}) | combine(new_item, recursive=true) }}"
    vars:
      new_item: "{'{{ task_item.interface }}': {'{{ task_item.key }}': '{{ task_item.value }}'}}"
    when: vars['netconfig'][task_item.interface] is defined
    loop:
      - { interface: 'nic1', key: 'ipaddress', value: '{{ ipaddress1 }}'}
      - { interface: 'nic2', key: 'ipaddress', value: '{{ ipaddress2 }}'}
      - { interface: 'nic3', key: 'ipaddress', value: '{{ ipaddress3 }}'}
      - { interface: 'nic4', key: 'ipaddress', value: '{{ ipaddress4 }}'}
      - { interface: 'nic5', key: 'ipaddress', value: '{{ ipaddress5 }}'}
    loop_control:
      loop_var: task_item
    no_log: true
