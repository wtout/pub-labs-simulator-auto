---
# handlers file for vm_fromiso
- name: restart chrony
  ansible.builtin.systemd:
    name: chronyd
    state: restarted
    daemon_reload: yes
  become: "{{ true if ansible_user != 'root' else false }}"
  tags: vm_creation

- name: expand disk0
  ansible.builtin.parted:
    device: /dev/sda
    unit: MiB
    number: 2
  become: "{{ true if ansible_user != 'root' else false }}"
  register: parted_info
  changed_when: parted_info is succeeded
  notify: define parted_start
  tags: vm_creation

- name: define parted_start
  ansible.builtin.set_fact:
    parted_start: "{{ task_item.begin | default(0) }}"
  loop: "{{ parted_info.partitions }}"
  loop_control:
    loop_var: task_item
  when: task_item.num == 2
  changed_when: parted_info is succeeded
  notify: delete old disk0 partition
  tags: vm_creation

- name: delete old disk0 partition
  ansible.builtin.parted:
    device: /dev/sda
    number: 2
    state: absent
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: create new disk0 partition
  tags: vm_creation

- name: create new disk0 partition
  ansible.builtin.parted:
    device: /dev/sda
    number: 2
    flags: [ lvm ]
    part_start: "{{ parted_start }}MiB"
    state: present
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: reboot vm
  tags: vm_creation

- name: reboot vm
  ansible.builtin.reboot:
    post_reboot_delay: 10
    reboot_timeout: 60
  become: "{{ true if ansible_user != 'root' else false }}"
  tags: vm_creation

- name: expand disk1
  ansible.builtin.shell: |
    echo -e "n\np\n\n\n\nw\n" | fdisk /dev/sdb
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: create disk1 filesystem
  tags: vm_creation

- name: create disk1 filesystem
  ansible.builtin.filesystem:
    fstype: ext4
    device: /dev/sdb1
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: set opt mount points
  tags: vm_creation

- name: set opt mount points
  ansible.builtin.mount:
    name: /opt
    src: /dev/sdb1
    fstype: ext4
    opts: defaults
    state: mounted
    dump: '1'
    passno: '2'
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: set permissions and ownership of /opt
  tags: vm_creation

- name: set permissions and ownership of /opt
  ansible.builtin.file:
    path: /opt
    state: directory
    mode: 0755
    owner: root
    group: root
  become: "{{ true if ansible_user != 'root' else false }}"
  tags: vm_creation

- name: expand disk2
  ansible.builtin.shell: |
    echo -e "n\np\n\n\n\nw\n" | fdisk /dev/sdc
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: create disk2 filesystem
  tags: vm_creation

- name: create disk2 filesystem
  ansible.builtin.filesystem:
    fstype: ext4
    device: /dev/sdc1
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: set data01 mount points
  tags: vm_creation

- name: set data01 mount points
  ansible.builtin.mount:
    name: /data01
    src: /dev/sdc1
    fstype: ext4
    opts: defaults
    state: mounted
    dump: '1'
    passno: '2'
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: set permissions and ownership of /data01
  tags: vm_creation

- name: set permissions and ownership of /data01
  ansible.builtin.file:
    path: /data01
    state: directory
    mode: 0755
    owner: root
    group: root
  become: "{{ true if ansible_user != 'root' else false }}"
  tags: vm_creation

- name: expand disk3
  ansible.builtin.shell: |
    echo -e "n\np\n\n\n\nw\n" | fdisk /dev/sdd
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: create disk3 filesystem
  tags: vm_creation

- name: create disk3 filesystem
  ansible.builtin.filesystem:
    fstype: ext4
    device: /dev/sdd1
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: set data02 mount points
  tags: vm_creation

- name: set data02 mount points
  ansible.builtin.mount:
    name: /data02
    src: /dev/sdd1
    fstype: ext4
    opts: defaults
    state: mounted
    dump: '1'
    passno: '2'
  become: "{{ true if ansible_user != 'root' else false }}"
  notify: set permissions and ownership of /data02
  tags: vm_creation

- name: set permissions and ownership of /data02
  ansible.builtin.file:
    path: /data02
    state: directory
    mode: 0755
    owner: root
    group: root
  become: "{{ true if ansible_user != 'root' else false }}"
  tags: vm_creation
