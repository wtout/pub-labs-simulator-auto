---
# tasks to check connectivity and credentials for non EM7 hosts
- name: check connection credentials
  block:
    - name: check VM reachable
      ansible.builtin.command: ping {{ ansible_host }} -c 1
      register: vcr_vm_reachable
      become: "{{ 'yes' if build.version.os_iso|lower is search('almalinux') else 'no' }}"
      check_mode: no
      delegate_to: localhost
    - name: check original credentials
      block:
        - name: check VM credentials
          ansible.builtin.wait_for_connection:
            timeout: 10
          register: vcr_vm_creds
          check_mode: no
      rescue:
        - name: switch to {{ vm_admin_user }} user
          ansible.builtin.set_fact:
            ansible_user: "{{ vm_admin_user }}"
            ansible_ssh_pass: "{{ vm_admin_pass }}"
            ansible_become_pass: "{{ vm_admin_pass }}"
          no_log: true
        - name: check {{ vm_admin_user }} credentials
          ansible.builtin.wait_for_connection:
            timeout: 10
  rescue:
    - name: check service user credentials
      block:
        - name: switch to {{ vm_admin_user }} user
          ansible.builtin.set_fact:
            ansible_user: "{{ vm_admin_user }}"
            ansible_ssh_pass: "{{ vm_admin_pass }}"
          no_log: true
        - name: check connection
          ansible.builtin.wait_for:
            port: 22
            host: "{{ netconfig.nic1.ipaddress }}"
            search_regex: OpenSSH
            timeout: 10
          register: vcr_vm_connection
          check_mode: no
          delegate_to: localhost
        - ansible.builtin.debug:
            msg: "VM hardening is enabled. Nothing to do"
        - name: set flag to not create and configure the VMs
          ansible.builtin.set_fact:
            crecon: false
      rescue:
        - name: revert user
          ansible.builtin.set_fact:
            ansible_user: "{{ credentials.username }}"
            ansible_ssh_pass: "{{ credentials.password }}"
          no_log: true
  tags: vm_creation
