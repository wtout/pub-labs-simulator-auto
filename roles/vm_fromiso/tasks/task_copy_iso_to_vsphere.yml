---
# Tasks to copy the ISO file to datastore
- block:
  - name: check if the installer ISO is on the datastore
    community.vmware.vsphere_file:
      hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
      datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
      datastore: "{{ iso_datastore }}"
      path: "{{ iso_path }}/{{ iso_installer }}"
      state: file
      validate_certs: false
    register: iso_present
    when: ds_folder is succeeded
    run_once: "{{ true if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] is search('h') else false }}"
  rescue:
  - name: copy installer ISO file to vsphere
    community.vmware.vsphere_copy:
      hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
      datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
      datastore: "{{ iso_datastore }}"
      src: "{{ auto_dir }}/{{ iso_dir }}/{{ iso_installer }}"
      dest: "{{ iso_path }}/{{ iso_installer }}"
      validate_certs: false
    async: 7200
    poll: 30
    run_once: "{{ true if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] is search('h') else false }}"
    when:
      - not ansible_check_mode
  delegate_to: localhost
  environment:
    http_proxy: ''
    https_proxy: ''
