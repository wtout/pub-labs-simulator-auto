---
# Tasks to copy the ISO file to datastore
- block:
  - name: define iso_datastore and iso_path
    ansible.builtin.set_fact:
      iso_datastore: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['storage_datastore'] if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['storage_datastore'] != '' else vm_ds }}"
      iso_path: "ISO{{ '/' + hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['storage_path'] if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['storage_path'] != '' else '' }}"

  - name: create a directory on the datastore
    community.vmware.vsphere_file:
      hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
      datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
      datastore: "{{ iso_datastore }}"
      path: "{{ iso_path }}"
      state: directory
      validate_certs: false
    register: ds_folder
    throttle: 1

  - block:
    - include_tasks: task_poweroff_vm.yml
    - name: copy kickstart ISO file to vsphere
      community.vmware.vsphere_copy:
        hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
        datastore: "{{ iso_datastore }}"
        src: "{{ role_path }}/files/{{ vm.name }}-kickstart.iso"
        path: "{{ iso_path }}/{{ vm.name }}-kickstart.iso"
        validate_certs: false
    - include_tasks: task_copy_iso_to_vsphere.yml
      when:
        - mycondition
      vars:
        mycondition: "{{ inventory_hostname == firsthost if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] is search('h') else inventory_hostname in ansible_play_hosts }}"
    - name: wait for ISO to be copied to vsphere
      ansible.builtin.wait_for:
        path: "/var/tmp/{{ 'secondary' if 'dr' in group_names else 'primary' }}_iso_copy_complete.txt"
        state: present
        timeout: 1200
        delay: 10
        sleep: 30
      when:
        - hostvars[firsthost]['iso_present'] is not defined or hostvars[firsthost]['iso_present'] is failed
        - mycondition
      vars:
        mycondition: "{{ inventory_hostname != firsthost if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] is search('h') else false }}"
    when: ds_folder is succeeded
    vars:
      firsthost: "{{ ansible_play_hosts | intersect(groups['dr'] if 'dr' in group_names else groups['stack']) | first }}"
  delegate_to: localhost
