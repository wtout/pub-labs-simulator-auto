---
# tasks file to create vms
- name: Creating VMs
  vars:
    firsthost: "{{ ansible_play_hosts | intersect(groups['dr'] if 'dr' in group_names else groups['stack']) | first }}"
    inventory_folder: "{{ hostvars[inventory_hostname]['datacenter']['secondary' if 'dr' in group_names else 'primary']['folder'] }}"
    myfolder: "{{ ('/' if inventory_folder is not regex('^/') else '') + inventory_folder }}"
  block:
    - name: Create Hosted VMs
      when: hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] == 'h'
      block:
        - name: Create folder path
          ansible.builtin.include_tasks:
            file: task_create_folder_path.yml
            apply:
              vars:
                curr_folder: "{{ myfolder }}"
          when:
            - crecon | default(true) | bool
            - "'stack' in group_names"
            - inventory_hostname == ansible_play_hosts | intersect(groups['stack']) | first
        - name: Create folder path
          ansible.builtin.include_tasks:
            file: task_create_folder_path.yml
            apply:
              vars:
                curr_folder: "{{ myfolder }}"
          when:
            - crecon | default(true) | bool
            - build.disaster_recovery
            - "'dr' in group_names"
            - inventory_hostname == ansible_play_hosts | intersect(groups['dr']) | first
        - name: Creating VM pair
          when: hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datastore_cluster'] == ''
          block:
            - name: Get list of groups in play
              ansible.builtin.set_fact:
                play_group_list: "{{ play_group_list | default([]) | union([host_item[:-2]]) }}"
              loop: "{{ ansible_play_hosts | reject('search', 'vcenter') | list }}"
              loop_control:
                loop_var: host_item
                label: "{{ host_item }}"
              when:
                - inventory_hostname == ansible_play_hosts | intersect(groups['stack'] + groups['dr']) | first
            - name: Create VM pair
              ansible.builtin.include_tasks:
                file: task_create_vm_pair.yml
                apply:
                  vars:
                    vm_group: "{{ group_item }}"
              loop: "{{ play_group_list }}"
              loop_control:
                loop_var: group_item
                label: "{{ group_item }}"
              when: inventory_hostname in groups[group_item]
        - name: Create configure VMs
          ansible.builtin.include_tasks: task_create_configure_vms.yml
          when:
            - hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datastore_cluster'] != ''

    - name: Create On-prem VMs
      when: hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] == 'a'
      block:
        - name: Creating folder path
          when: fldr_name != ''
          block:
            - name: Create folder path
              ansible.builtin.include_tasks:
                file: task_create_folder_path.yml
                apply:
                  vars:
                    curr_folder: "{{ myfolder }}"
              when:
                - crecon | default(true) | bool
                - "'stack' in group_names"
                - inventory_hostname == ansible_play_hosts | intersect(groups['stack']) | first
            - name: Create folder path
              ansible.builtin.include_tasks:
                file: task_create_folder_path.yml
                apply:
                  vars:
                    curr_folder: "{{ myfolder }}"
              when:
                - crecon | default(true) | bool
                - build.disaster_recovery
                - "'dr' in group_names"
                - inventory_hostname == ansible_play_hosts | intersect(groups['dr']) | first
        - name: Create configure VMs
          ansible.builtin.include_tasks: task_create_configure_vms.yml
