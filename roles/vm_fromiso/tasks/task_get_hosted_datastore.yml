---
# tasks to define the hosted datastore for each host
- name: Get host index
  ansible.builtin.set_fact:
    host_index: "{{ inventory_hostname[-2:] }}"
    vm_group: "{{ inventory_hostname[:-2] }}"

- name: Get datastore info
  community.vmware.vmware_datastore_info:
    hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
    username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
    password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
    datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
    cluster: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['cluster'] }}"
    validate_certs: false
  register: datastore_info
  delegate_to: localhost

- name: Define hosted datastore names
  ansible.builtin.set_fact:
    ds_names: "{{ ds_names | default([]) + [task_item.name] }}"
  loop: "{{ datastore_info.datastores | sort(attribute='freeSpace') }}"
  loop_control:
    loop_var: task_item
    label: "{{ task_item.name }}"
  when: task_item.freeSpace >= ((vm.disk | float + vm.memory | float) * 1024 | pow(3))

- name: Define hosted datastores list for each host group
  ansible.builtin.set_fact:
    vm_ds_names: "{{ ds_names | intersect(hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'] | first][vm_group + '_ds_names']) }}"
- name: Assert 1
  ansible.builtin.assert:
    that:
      - vm_ds_names | length >= 2
    fail_msg: "Not enough storage space to deploy the pair of {{ vm_group }} VMs"
  when:
    - groups[vm_group][host_index] is defined
    - groups[vm_group][host_index | int + 1] is defined

- name: Define hosted datastore for each odd index host
  ansible.builtin.set_fact:
    vm_ds: "{{ vm_ds_names[0] }}"
  when:
    - host_index | int % 2 != 0

- name: Define hosted datastore for each even index host
  ansible.builtin.set_fact:
    vm_ds: "{{ vm_ds_names[1] }}"
  when:
    - host_index | int % 2 == 0
