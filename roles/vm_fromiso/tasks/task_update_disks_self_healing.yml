---
# Tasks to update disks with self healing mechanism
- block:
  - block:
    - name: check VM reachable
      ansible.builtin.shell: |
        sshpass -p {{ ansible_ssh_pass }} ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T -l {{ ansible_user }} {{ netconfig.nic1.ipaddress if netconfig.nic1.ipaddress != '' else netconfig.nic2.ipaddress }} <<EOF
        whoami
        EOF
      register: vm_reachable1
      until: vm_reachable1 is succeeded
      retries: 3
      delay: 10
      no_log: yes
    rescue:
    - ansible.builtin.debug:
        msg: "{{ vm_reachable1|replace(ansible_ssh_pass,'obfuscated') if ansible_ssh_pass != '' else vm_reachable1 }}"
    always:
    - ansible.builtin.assert:
        that: vm_reachable1 is succeeded
    delegate_to: localhost
  - name: Update disks
    block:
      - include_tasks: task_update_disks.yml
    rescue:
      - include_tasks: task_delete_ssh_key.yml
      - include_tasks: task_delete_vm.yml
      - include_tasks: task_deploy_iso_self_healing.yml
      - include_tasks: task_delete_gtw_nic1_self_healing.yml
      - include_tasks: task_update_disks.yml
    always:
      - name: define disk_rebuild
        ansible.builtin.set_fact:
          disk_rebuild: "{{ vmguest_disk0|default({'failed': false}) is failed or vmguest_disk1|default({'failed': false}) is failed or vmguest_disk2|default({'failed': false}) is failed or vmguest_disk3|default({'failed': false}) is failed }}"
      - name: check if rebuild is still required
        ansible.builtin.assert:
          that:
            - not disk_rebuild|default(false)
          success_msg: 'Disks updated successfully'
          fail_msg: 'Unable to update the disks successfully'
