---
# tasks file for vm_hardening
- name: Main vm_hardening block
  when: harden_vms | default(false) | bool
  tags: vm_hardening
  block:
    - name: Check if VM exists
      community.vmware.vmware_guest_info:
        hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
        name: "{{ vm.name }}"
        schema: vsphere
        validate_certs: false
      register: reg_vh_vm_exists
      no_log: true
      delegate_to: localhost
    - name: Check connection credentials
      ansible.builtin.include_tasks: task_check_con_creds.yml
    - name: VM hardening
      when: hardv | default(true) | bool
      block:
        - name: Download hardening automation
          ansible.builtin.include_tasks: task_download_hardening_auto.yml
        - name: Run setup
          ansible.builtin.setup:
        - name: OS hardening
          ansible.builtin.include_role:
            name: ansible-os_hardening
            apply:
              vars:
                hardening_level: 1
                set_rsyslog_remote_host: false
                install_updates_and_patches: false
        - name: Delete hardening automation
          ansible.builtin.include_tasks: task_delete_hardening_auto.yml
    - name: Set the root to never expire
      ansible.builtin.include_tasks: task_root_never_expire.yml
  rescue:
    - name: Debug message
      ansible.builtin.debug:
        msg: "VM does not exist. Nothing to do"
      when: reg_vh_vm_exists is failed
