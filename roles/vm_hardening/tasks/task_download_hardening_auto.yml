---
# Tasks to clone the repo
- name: Cloning the repo
  delegate_to: localhost
  run_once: true
  block:
    - name: Clone the repo
      block:
        - name: Clone the repo # noqa: latest[git]
          ansible.builtin.git:
            repo: "{{ hardening_site }}/{{ hardening_reponame }}.git"
            dest: "{{ auto_dir }}/roles/{{ hardening_reponame }}"
            version: 'HEAD'
            force: true
          register: reg_clone_repo1
      rescue:
        - name: Re-clone the repo # noqa: latest[git]
          ansible.builtin.git:
            repo: "{{ hardening_site }}/{{ hardening_reponame }}.git"
            dest: "{{ auto_dir }}/roles/{{ hardening_reponame }}"
            version: 'HEAD'
            force: true
          register: reg_clone_repo2
    - name: Define clone_repo
      ansible.builtin.set_fact:
        clone_repo: "{{ reg_clone_repo1 if reg_clone_repo1 is succeeded else reg_clone_repo2 }}"
    - name: Use last tagged version
      block:
        - name: Switch to last tagged version of {{ hardening_reponame }}
          ansible.builtin.shell:
            cmd: set -o pipefail && git checkout tags/$(git tag --sort=-version:refname|head -1)
            executable: /bin/bash
          args:
            chdir: "{{ auto_dir }}/roles/{{ hardening_reponame }}"
          register: switch_ver1
          changed_when: switch_ver1.rc == 0
      rescue:
        - name: Switch to last tagged version of {{ hardening_reponame }}
          ansible.builtin.shell:
            cmd: set -o pipefail && git checkout tags/$(git tag | sort -rV | head -1)
            executable: /bin/bash
          args:
            chdir: "{{ auto_dir }}/roles/{{ hardening_reponame }}"
          register: switch_ver2
          changed_when: switch_ver2.rc == 0
    - name: Download the required roles
      ansible.builtin.shell: |
        ansible-galaxy install -r requirements.yml -p {{ auto_dir }}/roles
      args:
        chdir: "{{ auto_dir }}/roles/{{ hardening_reponame }}"
      register: download_roles
      changed_when: download_roles.rc == 0
    - name: Set the required permissions on downloaded roles
      ansible.builtin.shell: |
        chmod -R o+w ansible-*
      args:
        chdir: "{{ auto_dir }}/roles"
      register: set_permission
      changed_when: set_permission.rc == 0
      become: true
